name: build multi-arch images

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:
  push:
    branches:
      - dev
      - main
    paths-ignore:
      - '.github/**'
env:
  IMAGE: nordlynx-transmission
  VERSION: "3.16.0"
  TAG: ${{ github.ref_name }}
  REVISION: ${{ github.ref_name }}
  USER: edgd1er

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ toJson(steps.meta.outputs.json) }}
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          install: true
          use: true
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ env.USER }}/${{ env.IMAGE }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/heads/main') }}
            #prefix=test,onlatest=true
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch,enable=${{ github.event_name != 'schedule' }}
            type=ref,event=tag
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          build-args: |
            VERSION=${{ env.VERSION }}
            TZ=America/Chicago
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: set_print
        run: |
          echo '${{ fromJson(steps.meta.outputs.json).tags }}'
      - name: debug
        run: |
          env
          echo "ttags=${{ fromJson(steps.meta.outputs.json).tags }}" >> $GITHUB_OUTPUT
        shell: bash
