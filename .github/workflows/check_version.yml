name: check apps version
on:
  schedule:
    - cron: "0 7 * * *"
  workflow_dispatch:

env:
  LIBEVENT_VERSION: 2.1.12-stable
  TBT_VERSION: 4.0.6
  TBT_DEV_VERSION: 4.1.0
  NORDVPN_PACKAGE: https://repo.nordvpn.com/deb/nordvpn/debian/dists/stable/main/binary-amd64/Packages
  TWCV: 1.6.1-update1
  TICV: 1.8.0

jobs:
  check_nordvpn_version:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: get local nordvpn client version
        run: |
          echo "NORDVPN_VERSION="$(grep -oP "(?<=changelog\): )[^ ]+" README.md | tr -d ' ') >> $GITHUB_ENV
      - name: get latest version
        id: getlatestversion
        run: |
          ver=$(curl -s "${{ env.NORDVPN_PACKAGE }}" | grep -oP "(?<=Version: )(.*)" | sort -t. -n -k1,1 -k2,2 -k3,3 | tail -1)
          echo "image version: ${{ env.NORDVPN_VERSION }}, latest nordvpn version: ${ver}"
          if [[ ${{ env.NORDVPN_VERSION }} != ${ver} ]]; then 
            curl -L https://repo.nordvpn.com/deb/nordvpn/debian/pool/main/nordvpn_${ver}_amd64.changelog
            exit 1
          fi
  check-lib_event_version:
    runs-on: ubuntu-latest
    steps:
      - name: get libevent's latest version
        id: getlatestversion
        run: |
          ver=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/libevent/libevent/releases/latest" | jq -r .tag_name )
          echo "libevent build version: ${{ env.LIBEVENT_VERSION }}, latest github libevent version: ${ver}"
          if [[ ${{ env.LIBEVENT_VERSION }} != ${ver#*-} ]]; then exit 1; fi

  check-transmission_version:
    runs-on: ubuntu-latest
    steps:
      - name: get transmission's latest version
        id: getlatestversion
        run: |
          ver=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/transmission/transmission/releases/latest" | jq -r .tag_name )
          echo "transmission build version: ${{ env.TBT_VERSION }}, latest github transmission version: ${ver}"
          if [[ ${{ env.TBT_VERSION }} != ${ver} ]]; then exit 1; fi

  check-transmission-dev-version:
    runs-on: ubuntu-latest
    steps:
      - name: get transmission's dev latest version
        id: getdevlatestversion
        run: |
          devver=$(curl -s "https://raw.githubusercontent.com/transmission/transmission/main/CMakeLists.txt" | grep -oP "(?<=TR_VERSION_(MAJOR|MINOR|PATCH) \")[^\"]+" | tr '\n' '.' | grep -oP "[0-9]+\.[0-9]+\.[0-9]+")
          echo "transmission build version: ${{ env.TBT_DEV_VERSION }}, latest github transmission dev version: ${devver}"
          if [[ ${{ env.TBT_DEV_VERSION }} != ${devver} ]]; then exit 1; fi

  check-ui-version:
    runs-on: ubuntu-latest
    steps:
      - name: get ui's latest version
        id: getuilatestversion
        run: |
          #ver=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/transmission-web-control/transmission-web-control/releases/latest" | jq -r .tag_name)
          ver=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/ronggang/transmission-web-control/releases/latest" | jq -r .tag_name)
          echo -e "transmission-web-control version: ${{ env.TWCV }}, latest github transmission version: ${ver}"
          if [[ v${{ env.TWCV }} != ${ver} ]]; then echo ERROR; fi
          ver=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/6c65726f79/Transmissionic/releases/latest" | jq -r .tag_name)
          echo -e "Transmissionic version: ${{ env.TICV }}, latest github transmission version: ${ver}"
          if [[ v${{ env.TICV }} != ${ver} ]]; then echo ERROR; fi